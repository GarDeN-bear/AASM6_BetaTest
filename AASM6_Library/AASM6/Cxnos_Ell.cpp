#include "AASM6.h"
#include "Extensions.h"

namespace AASM6
{
	float Cxnos_Ell(float M, float lambda_nos, InputComplex& x_2, InputComplex& x_1)
	{
		static unsigned int Length_1_1 = 43; static float Matrix_1_1[][2] = { {0.4f,0.796003750510852f}, {0.45f,0.804965007173552f}, {0.5f,0.818809760163857f}, {0.55f,0.833546665528236f}, {0.6f,0.849212890405534f}, {0.65f,0.866824746144448f}, {0.7f,0.886866295744476f}, {0.75f,0.906644810461306f}, {0.8f,0.933240022936753f}, {0.9f,0.994116184909501f}, {1.0f,1.07358372866902f}, {1.1f,1.14104644216632f}, {1.2f,1.2019024740792f}, {1.3f,1.25234940786636f}, {1.4f,1.30279634165352f}, {1.5f,1.34055263559236f}, {1.6f,1.37830892953119f}, {1.7f,1.40733720106079f}, {1.8f,1.43636547259038f}, {1.9f,1.46021770420204f}, {2.0f,1.4840699358137f}, {2.1f,1.50290835162175f}, {2.2f,1.5217467674298f}, {2.3f,1.53629309353809f}, {2.4f,1.55083941964639f}, {2.5f,1.56285818126546f}, {2.55f,1.56862912694498f}, {2.6f,1.57369871682579f}, {2.65f,1.57885403400716f}, {2.7f,1.58320810490245f}, {2.75f,1.5877340388808f}, {2.8f,1.59189796965439f}, {2.85f,1.59662162911197f}, {2.9f,1.60012816065558f}, {2.95f,1.60297969502073f}, {3.0f,1.60533105972635f}, {3.05f,1.60775740074335f}, {3.1f,1.61034595263067f}, {3.2f,1.61599992666537f}, {3.3f,1.61921177766819f}, {3.4f,1.62242362867101f}, {3.5f,1.62257043907986f}, {3.6f,1.62261864490741f} };
		static unsigned int Length_1_2 = 43; static float Matrix_1_2[][2] = { {0.4f,0.108538611200545f}, {0.45f,0.130278131287896f}, {0.5f,0.156923764957597f}, {0.55f,0.188907178650093f}, {0.6f,0.223302221309573f}, {0.65f,0.260994822882267f}, {0.7f,0.304035620823102f}, {0.75f,0.355871431226865f}, {0.8f,0.415118088893046f}, {0.9f,0.523622563239595f}, {1.0f,0.614047765539015f}, {1.1f,0.689903728448388f}, {1.2f,0.754263227128148f}, {1.3f,0.80525456127349f}, {1.4f,0.856245895418831f}, {1.5f,0.893269561173357f}, {1.6f,0.930293226927882f}, {1.7f,0.954686276240972f}, {1.8f,0.979079325554063f}, {1.9f,0.995478898177683f}, {2.0f,1.0118784708013f}, {2.1f,1.02496969023291f}, {2.2f,1.03806090966451f}, {2.3f,1.04841694564289f}, {2.4f,1.05877298162127f}, {2.5f,1.06776945043681f}, {2.55f,1.07181249050545f}, {2.6f,1.07585553057409f}, {2.65f,1.07865521580317f}, {2.7f,1.08145490103224f}, {2.75f,1.08425458626132f}, {2.8f,1.0870542714904f}, {2.85f,1.08898000512826f}, {2.9f,1.09090573876612f}, {2.95f,1.09283147240399f}, {3.0f,1.09475720604185f}, {3.05f,1.09611637528779f}, {3.1f,1.09747554453373f}, {3.2f,1.10110427170388f}, {3.3f,1.10274192666545f}, {3.4f,1.10437958162701f}, {3.5f,1.10414628863232f}, {3.6f,1.1039129900512f} };
		static unsigned int Length_1_3 = 43; static float Matrix_1_3[][2] = { {0.4f,0.0523634453513426f}, {0.45f,0.0468552181752837f}, {0.5f,0.0439988094147882f}, {0.55f,0.0433703679681928f}, {0.6f,0.0473343345124458f}, {0.65f,0.0556817799646371f}, {0.7f,0.069283999259926f}, {0.75f,0.0892969233904254f}, {0.8f,0.120692222130151f}, {0.9f,0.233067911746412f}, {1.0f,0.342125008353536f}, {1.1f,0.439362383529236f}, {1.2f,0.519544302740675f}, {1.3f,0.574369137067046f}, {1.4f,0.629193971393416f}, {1.5f,0.665278510242536f}, {1.6f,0.701363049091654f}, {1.7f,0.724542097721557f}, {1.8f,0.747721146351459f}, {1.9f,0.762250280839963f}, {2.0f,0.776779415328467f}, {2.1f,0.788956302182633f}, {2.2f,0.8011331890368f}, {2.35f,0.808948329735353f}, {2.5f,0.816763470433906f}, {2.65f,0.821499999154127f}, {2.725f,0.823635373387239f}, {2.8f,0.82577074762035f}, {2.825f,0.827668409796715f}, {2.85f,0.82956607197308f}, {2.875f,0.831463734149444f}, {2.9f,0.833361396325809f}, {2.925f,0.834920690631477f}, {2.95f,0.836479984937145f}, {2.975f,0.838039279242814f}, {3.0f,0.839598573548482f}, {3.05f,0.840469639783305f}, {3.1f,0.841340706018128f}, {3.2f,0.84354861874177f}, {3.3f,0.845142008043022f}, {3.4f,0.846735397344274f}, {3.5f,0.846935623524853f}, {3.6f,0.847135853851355f} };
		static unsigned int Length_1_4 = 43; static float Matrix_1_4[][2] = { {0.4f,0.0121512675191471f}, {0.45f,0.0121370405307862f}, {0.5f,0.0121228135424253f}, {0.55f,0.0124494094688689f}, {0.6f,0.0135756173780944f}, {0.65f,0.0173967863851323f}, {0.7f,0.0232991326525748f}, {0.75f,0.0323969649969294f}, {0.8f,0.0428499924509017f}, {0.9f,0.0860752842252036f}, {1.0f,0.156937649399516f}, {1.1f,0.236746584375463f}, {1.2f,0.296194772061125f}, {1.3f,0.354442452812204f}, {1.4f,0.395196931396575f}, {1.5f,0.426607831958846f}, {1.6f,0.453363176686627f}, {1.7f,0.471116005702985f}, {1.8f,0.488868834719342f}, {1.9f,0.500021474279006f}, {2.0f,0.51117411383867f}, {2.1f,0.517372773784061f}, {2.2f,0.523571433729452f}, {2.3f,0.526052513240721f}, {2.4f,0.529528078311655f}, {2.5f,0.531155168094174f}, {2.55f,0.531735822858435f}, {2.6f,0.532316477622696f}, {2.65f,0.533228597140966f}, {2.7f,0.533305098464926f}, {2.75f,0.533660090750079f}, {2.8f,0.533810397150929f}, {2.85f,0.533679514675635f}, {2.9f,0.533565076719547f}, {2.95f,0.533239363077651f}, {3.0f,0.532965515564553f}, {3.05f,0.532833807813514f}, {3.1f,0.532422814850187f}, {3.2f,0.531447470890991f}, {3.3f,0.52976437143058f}, {3.4f,0.528909925864836f}, {3.5f,0.527080541740925f}, {3.6f,0.525251163648975f} };
		static unsigned int Length_1_5 = 43; static float Matrix_1_5[][2] = { {0.4f,-0.0223027342756f}, {0.45f,-0.0227791544330287f}, {0.5f,-0.0232555745904574f}, {0.55f,-0.023731994747886f}, {0.6f,-0.0242084149053147f}, {0.65f,-0.0247328111822126f}, {0.7f,-0.0252572074591105f}, {0.75f,-0.0253454105464846f}, {0.8f,-0.0235084937060864f}, {0.9f,-0.00293260742145415f}, {1.0f,0.0454759904305225f}, {1.1f,0.119176741689487f}, {1.2f,0.165066008505816f}, {1.3f,0.192725247630225f}, {1.4f,0.21009145908814f}, {1.5f,0.218720301577275f}, {1.6f,0.227349144066411f}, {1.7f,0.230954580333129f}, {1.8f,0.234560016599847f}, {1.9f,0.236088578658347f}, {2.0f,0.237617140716846f}, {2.1f,0.237938847111662f}, {2.2f,0.238260553506477f}, {2.3f,0.236981432139126f}, {2.4f,0.236511232075674f}, {2.5f,0.236041032012222f}, {2.55f,0.235269395664382f}, {2.6f,0.234497759316542f}, {2.65f,0.233726122968702f}, {2.7f,0.232954486620861f}, {2.75f,0.232182850278999f}, {2.8f,0.231411213937137f}, {2.85f,0.230639577592286f}, {2.9f,0.229867941247436f}, {2.95f,0.229096304902586f}, {3.0f,0.228324668557735f}, {3.05f,0.227553032209897f}, {3.1f,0.226781395862058f}, {3.2f,0.225718407537408f}, {3.3f,0.224655419212759f}, {3.4f,0.223582188579067f}, {3.5f,0.222522614353447f}, {3.6f,0.22146304202711f} };

		//Значения по комплексу x2
		const float x2_min = 0.0f;
		const float x2_2 = 0.25f;
		const float x2_3 = 0.5f;
		const float x2_4 = 1.0f;
		const float x2_max = 2.0f;

		//Входной комплекс x2
		float x2 = lambda_nos;

		x_2.Min = x2_min;
		x_2.Value = x2;
		x_2.Max = x2_max;

		//Входной комплекс x1
		const float x1_min = 0.0f;
		const float x1_max = 3.6f;

		//Координата по оси х графика
		float x1 = M;

		x_1.Min = x1_min;
		x_1.Value = x1;
		x_1.Max = x1_max;

		//Ограничение по диапазону оси x
		if (x1 < x1_min)
			x1 = x1_min;
		else if (x1 > x1_max)
			x1 = x1_max;

		//Ограничение по диапазону оси y
		if (x2 < x2_min)
			x2 = x2_min;
		else if (x2 > x2_max)
			x2 = x2_max;

		//Вычисление
		if (x2 == x2_min)
		{
			//Используем кривую 1
			float y = Linterp(Matrix_1_1, Length_1_1, x1);

			return y;
		}
		else if (x2_min <= x2 && x2 < x2_2)
		{
			//Интерполяция между кривыми 1 и 2		
			float y1 = Linterp(Matrix_1_1, Length_1_1, x1);
			float y2 = Linterp(Matrix_1_2, Length_1_2, x1);

			return LinterpOnce(x2_min, y1, x2_2, y2, x2);
		}
		else if (x2_2 <= x2 && x2 < x2_3)
		{
			//Интерполяция между кривыми 2 и 3		
			float y1 = Linterp(Matrix_1_2, Length_1_2, x1);
			float y2 = Linterp(Matrix_1_3, Length_1_3, x1);

			return LinterpOnce(x2_2, y1, x2_3, y2, x2);
		}
		else if (x2_3 <= x2 && x2 < x2_4)
		{
			//Интерполяция между кривыми 3 и 4			
			float y1 = Linterp(Matrix_1_3, Length_1_3, x1);
			float y2 = Linterp(Matrix_1_4, Length_1_4, x1);

			return LinterpOnce(x2_3, y1, x2_4, y2, x2);
		}
		else if (x2_4 <= x2 && x2 < x2_max)
		{
			//Интерполяция между кривыми 4 и 5		
			float y1 = Linterp(Matrix_1_4, Length_1_4, x1);
			float y2 = Linterp(Matrix_1_5, Length_1_5, x1);

			return LinterpOnce(x2_4, y1, x2_max, y2, x2);
		}
		else if (x2 == x2_max)
		{
			//Используем кривую 5		
			float y = Linterp(Matrix_1_5, Length_1_5, x1);

			return y;
		}
		else
			return NAN;
	}

	ErrorCode* get_Cxnos_Ell(float& Result, float M, float lambda_nos, InputComplex& x_2, InputComplex& x_1)
	{
		static ErrorCode ErrC;
		// Проверка: некоторые аргументы не должны быть меньше 0		
		if (M < 0.0f)
		{
			ErrC.ArgNumber = 1;
			ErrC.Code = ErrC_NumberMustNotBeNeg;
			return &ErrC;
		}
		if (lambda_nos < 0.0f)
		{
			ErrC.ArgNumber = 2;
			ErrC.Code = ErrC_NumberMustNotBeNeg;
			return &ErrC;
		}

		// Вызываем функцию интерполяции графика
		Result = Cxnos_Ell(M, lambda_nos, x_2, x_1);
		ErrC.ArgNumber = ErrC_OK;
		ErrC.Code = ErrC_OK;

		return &ErrC;
	}
}