#include "AASM6.h"
#include "Extensions.h"

namespace AASM6
{
	float CC_F_IsP(float M, float lambda_c, float chi_0, InputComplex& x_2, InputComplex& x_1)
	{
		static unsigned int Length_1_1 = 16; static float Matrix_1_1[][2] = { {-3.5f,0.664941306361023f}, {-3.25f,0.627586064933643f}, {-3.0f,0.591746112175901f}, {-2.75f,0.553687237760123f}, {-2.5f,0.515074956176316f}, {-2.25f,0.4759883222389f}, {-2.0f,0.434624797004157f}, {-1.75f,0.392312567062197f}, {-1.5f,0.349051632413017f}, {-1.25f,0.302391175487717f}, {-1.0f,0.256364047489956f}, {-0.75f,0.202068378227357f}, {-0.5f,0.143838240177612f}, {-0.25f,0.0751817598419332f}, {0.0f,0.0f}, {1.0f,-0.307089122658404f} };
		static unsigned int Length_1_2 = 22; static float Matrix_1_2[][2] = { {-3.5f,0.669945101978095f}, {-3.25f,0.633718164339943f}, {-3.0f,0.596903318189314f}, {-2.75f,0.559480732920465f}, {-2.5f,0.521433433990318f}, {-2.25f,0.482747777945602f}, {-2.0f,0.443413872035613f}, {-1.75f,0.403425912305961f}, {-1.5f,0.362749621930762f}, {-1.25f,0.32093723329103f}, {-1.0f,0.277178718357939f}, {-0.75f,0.231193569869166f}, {-0.5f,0.182342978064343f}, {-0.375f,0.155047431208191f}, {-0.25f,0.126393209534366f}, {-0.125f,0.102460126599138f}, {0.0f,0.0843403024515715f}, {0.125f,0.0726130768436684f}, {0.25f,0.060760323035263f}, {0.375f,0.0395141931291114f}, {0.5f,0.0f}, {1.5f,-0.447944984797558f} };
		static unsigned int Length_1_3 = 26; static float Matrix_1_3[][2] = { {-3.5f,0.674968608730459f}, {-3.25f,0.639234066825375f}, {-3.0f,0.601206821322086f}, {-2.75f,0.565616476516818f}, {-2.5f,0.52822170079321f}, {-2.25f,0.490826925069602f}, {-2.0f,0.453432149345994f}, {-1.75f,0.416116432344846f}, {-1.5f,0.379116950233539f}, {-1.25f,0.34006194133827f}, {-1.0f,0.3014022260553f}, {-0.75f,0.26171474738035f}, {-0.5f,0.219655507031599f}, {-0.375f,0.200121562988864f}, {-0.25f,0.178391873351358f}, {-0.125f,0.155888846915908f}, {0.0f,0.136501294188419f}, {0.125f,0.133596264952093f}, {0.25f,0.128928637607101f}, {0.375f,0.121409100436316f}, {0.5f,0.110696882470576f}, {0.625f,0.0951565450800999f}, {0.75f,0.0719322529245313f}, {0.875f,0.0406249963422711f}, {1.0f,0.0f}, {2.0f,-0.340889932796131f} };
		static unsigned int Length_1_4 = 30; static float Matrix_1_4[][2] = { {-3.5f,0.68743231330714f}, {-3.25f,0.650946581398625f}, {-3.0f,0.614062594728929f}, {-2.75f,0.576884418497881f}, {-2.5f,0.539520094542662f}, {-2.25f,0.502080116951215f}, {-2.0f,0.464675818844177f}, {-1.75f,0.42741772582849f}, {-1.5f,0.390380754055557f}, {-1.25f,0.3532463992962f}, {-1.0f,0.315429582501425f}, {-0.75f,0.276324707296866f}, {-0.5f,0.23615863474614f}, {-0.375f,0.216052556753614f}, {-0.25f,0.196536553244837f}, {-0.125f,0.179298064782127f}, {0.0f,0.165695237050238f}, {0.125f,0.156122555194201f}, {0.25f,0.149202964228572f}, {0.375f,0.143480348984389f}, {0.5f,0.137771666812869f}, {0.625f,0.131021407987505f}, {0.75f,0.122870080858643f}, {0.875f,0.113182390346224f}, {1.0f,0.101737681661538f}, {1.125f,0.0875049884307223f}, {1.25f,0.0682589279035459f}, {1.375f,0.0407368089358053f}, {1.5f,0.0f}, {2.5f,-0.395175734733879f} };
		static unsigned int Length_1_5 = 34; static float Matrix_1_5[][2] = { {-3.5f,0.69811876398129f}, {-3.25f,0.661309023638049f}, {-3.0f,0.62411979911507f}, {-2.75f,0.587310056474979f}, {-2.5f,0.550215702422722f}, {-2.25f,0.512646999428537f}, {-2.0f,0.477034507953928f}, {-1.75f,0.440476736926049f}, {-1.5f,0.402443540161618f}, {-1.25f,0.366869386291439f}, {-1.0f,0.332278849578962f}, {-0.75f,0.294573525200431f}, {-0.5f,0.260268365089144f}, {-0.375f,0.243001939417761f}, {-0.25f,0.22630473657071f}, {-0.125f,0.208709856616485f}, {0.0f,0.192768464829984f}, {0.125f,0.189243601797113f}, {0.25f,0.187301661097322f}, {0.375f,0.18374824222241f}, {0.5f,0.179165711688067f}, {0.625f,0.173800020041493f}, {0.75f,0.167489626639795f}, {0.875f,0.161084742684426f}, {1.0f,0.15268983261909f}, {1.125f,0.143691824434346f}, {1.25f,0.132880877545224f}, {1.375f,0.120435384501473f}, {1.5f,0.106355092877345f}, {1.625f,0.0880555634119868f}, {1.75f,0.0631588069976783f}, {1.875f,0.0349850182132887f}, {2.0f,0.0f}, {3.0f,-0.292159984743165f} };
		static unsigned int Length_1_6 = 36; static float Matrix_1_6[][2] = { {-3.5f,0.713637094547349f}, {-3.25f,0.676940844628718f}, {-3.0f,0.641150553029576f}, {-2.75f,0.605944678308315f}, {-2.5f,0.570973238068554f}, {-2.25f,0.535878603071331f}, {-2.0f,0.500317289571148f}, {-1.75f,0.463986498203548f}, {-1.5f,0.426987754198891f}, {-1.25f,0.389940357217486f}, {-1.0f,0.353535990164586f}, {-0.75f,0.317906944565324f}, {-0.5f,0.281862297288008f}, {-0.375f,0.263756804228666f}, {-0.25f,0.247274600327247f}, {-0.125f,0.233781735756706f}, {0.0f,0.224067715091473f}, {0.125f,0.217599281378701f}, {0.25f,0.213188272424569f}, {0.375f,0.209930306912604f}, {0.5f,0.207072753385167f}, {0.625f,0.20390800860565f}, {0.75f,0.199917200629028f}, {0.875f,0.194993093087425f}, {1.0f,0.189080011712727f}, {1.125f,0.182125018831809f}, {1.25f,0.174079204823748f}, {1.375f,0.164895298051781f}, {1.5f,0.15449585906166f}, {1.625f,0.142766702381883f}, {1.75f,0.129557661431661f}, {1.875f,0.114669423819291f}, {2.0f,0.097832295726426f}, {2.25f,0.0566374007787316f}, {2.5f,0.0f}, {3.5f,-0.259415379839999f} };
		static unsigned int Length_1_7 = 31; static float Matrix_1_7[][2] = { {-3.5f,0.73317539836389f}, {-3.25f,0.696840012751407f}, {-3.0f,0.662212290937919f}, {-2.75f,0.626446123475769f}, {-2.5f,0.591106876684916f}, {-2.25f,0.555329734685064f}, {-2.0f,0.519951981670181f}, {-1.75f,0.48475015774614f}, {-1.5f,0.44994236187375f}, {-1.25f,0.415531361999049f}, {-1.0f,0.381125662017186f}, {-0.75f,0.34668902562282f}, {-0.5f,0.312630526633663f}, {-0.375f,0.295269230491558f}, {-0.25f,0.278092859438301f}, {-0.125f,0.261337051944808f}, {0.0f,0.24601745000883f}, {0.125f,0.241601850989213f}, {0.25f,0.240824900527833f}, {0.5f,0.235904811111196f}, {0.75f,0.228077996249367f}, {1.0f,0.219653496508563f}, {1.25f,0.207585972153219f}, {1.5f,0.195973826075435f}, {1.75f,0.179261440444426f}, {2.0f,0.158906030628637f}, {2.25f,0.135545124061522f}, {2.5f,0.106173223991758f}, {2.75f,0.0623202941201557f}, {3.0f,0.0f}, {4.0f,-0.281117203828195f} };
		static unsigned int Length_1_8 = 35; static float Matrix_1_8[][2] = { {-3.5f,0.803788327971296f}, {-3.25f,0.76952111374098f}, {-3.0f,0.734229297230067f}, {-2.75f,0.700645149260006f}, {-2.5f,0.665353332749095f}, {-2.25f,0.631313806501474f}, {-2.0f,0.596363523698732f}, {-1.75f,0.56175477460416f}, {-1.5f,0.528056782064709f}, {-1.25f,0.494472634094647f}, {-1.0f,0.461457708971536f}, {-0.75f,0.426924858307336f}, {-0.5f,0.393004639825887f}, {-0.375f,0.377284973049707f}, {-0.25f,0.360891353754694f}, {-0.125f,0.343684343323353f}, {0.0f,0.329415604708268f}, {0.125f,0.326126344931766f}, {0.25f,0.325196077212443f}, {0.5f,0.322008429269522f}, {0.75f,0.318365403049041f}, {1.0f,0.312900863718319f}, {1.25f,0.305842500416137f}, {1.5f,0.297645691420054f}, {1.75f,0.285988005169388f}, {2.0f,0.274239245141482f}, {2.25f,0.25839208045268f}, {2.5f,0.243227983207359f}, {2.75f,0.220276917106334f}, {3.0f,0.194047127276591f}, {3.25f,0.159620528125053f}, {3.5f,0.120412456869136f}, {3.75f,0.0644009265035386f}, {4.0f,0.0f}, {5.0f,-0.239033809297446f} };
		static unsigned int Length_1_9 = 39; static float Matrix_1_9[][2] = { {-3.5f,0.887564861929586f}, {-3.25f,0.85272842143691f}, {-3.0f,0.819030428897459f}, {-2.75f,0.787267794037639f}, {-2.5f,0.754480558053307f}, {-2.25f,0.720441031805686f}, {-2.0f,0.688223018668305f}, {-1.75f,0.656118850100314f}, {-1.5f,0.624014681532323f}, {-1.25f,0.592024357533723f}, {-1.0f,0.561627857506582f}, {-0.75f,0.529295999799812f}, {-0.5f,0.499999999056127f}, {-0.375f,0.48453611232846f}, {-0.25f,0.469761711635591f}, {-0.125f,0.454540399344772f}, {0.0f,0.441494643370294f}, {0.125f,0.43726460752257f}, {0.25f,0.435738022715022f}, {0.5f,0.43283827944881f}, {0.75f,0.428534902120534f}, {1.0f,0.423525741067372f}, {1.25f,0.41658122233458f}, {1.5f,0.409522859032397f}, {1.75f,0.400187604342414f}, {2.0f,0.390510815944261f}, {2.25f,0.378670980727697f}, {2.5f,0.365920388956013f}, {2.75f,0.351689817782258f}, {3.0f,0.333702375818632f}, {3.25f,0.314234954452935f}, {3.5f,0.289986061172857f}, {3.75f,0.264143343921318f}, {4.0f,0.234885289588079f}, {4.25f,0.195381224009735f}, {4.5f,0.150526463670061f}, {4.75f,0.0900749973239503f}, {5.0f,0.0f}, {6.0f,-0.445834717838386f} };
		static unsigned int Length_1_10 = 42; static float Matrix_1_10[][2] = { {-3.5f,0.962364376222621f}, {-3.25f,0.932309408296225f}, {-3.0f,0.902823664824204f}, {-2.75f,0.874248677907305f}, {-2.5f,0.844307556157725f}, {-2.25f,0.814594123546924f}, {-2.0f,0.784880690936125f}, {-1.75f,0.756988771435565f}, {-1.5f,0.728186095379886f}, {-1.25f,0.700294175879326f}, {-1.0f,0.672743790086937f}, {-0.75f,0.645193404294548f}, {-0.5f,0.618667619626669f}, {-0.375f,0.605552725911503f}, {-0.25f,0.592119066723479f}, {-0.125f,0.578457718396674f}, {0.0f,0.5655932820556f}, {0.125f,0.562723347841307f}, {0.25f,0.561547030204245f}, {0.5f,0.558416304670424f}, {0.75f,0.555279690241466f}, {1.0f,0.550634831625782f}, {1.25f,0.544213997657043f}, {1.5f,0.537907010266251f}, {1.75f,0.530393268686508f}, {2.0f,0.522497230818955f}, {2.25f,0.513845043545312f}, {2.5f,0.503257498592039f}, {2.75f,0.489823839404014f}, {3.0f,0.47604864650782f}, {3.25f,0.459996562223825f}, {3.5f,0.441326052843858f}, {3.75f,0.421403253200601f}, {4.0f,0.399203562169544f}, {4.25f,0.373569561383106f}, {4.5f,0.3447988490445f}, {4.75f,0.31417465987858f}, {5.0f,0.277516708534987f}, {5.25f,0.235394217860673f}, {5.5f,0.182570337663695f}, {5.75f,0.111872860072481f}, {6.0f,0.0f} };

		//Значения по комплексу x2
		const float x2_min = 0.0f;
		const float x2_2 = 0.5f;
		const float x2_3 = 1.0f;
		const float x2_4 = 1.5f;
		const float x2_5 = 2.0f;
		const float x2_6 = 2.5f;
		const float x2_7 = 3.0f;
		const float x2_8 = 4.0f;
		const float x2_9 = 5.0f;
		const float x2_max = 6.0f;

		//Входной комплекс x2
		float x2 = lambda_c * tan(chi_0);

		x_2.Min = x2_min;
		x_2.Value = x2;
		x_2.Max = x2_max;

		//Ограничение по диапазону x2
		if (x2 < x2_min)
			x2 = x2_min;
		else if (x2 > x2_max)
			x2 = x2_max;

		//Входной комплекс x1
		const float x1_min = -3.5f;
		const float x1_max = 6.0f;

		//Координата по оси х графика
		float x1;
		if (M >= 1)
			x1 = lambda_c * sqrt(sqr(M) - 1.0f);
		else
			x1 = -lambda_c * sqrt(1.0f - sqr(M));
		
		x_1.Min = x1_min;
		x_1.Value = x1;
		x_1.Max = x1_max;

		//Ограничение по диапазону оси x
		if (x1 < x1_min)
			x1 = x1_min;
		else if (x1 > x1_max)
			x1 = x1_max;

		//Вычисление
		float y = 0.0f;
		if (x2 == x2_min)
		{
			y = Linterp(Matrix_1_1, Length_1_1, x1);			
		}
		else if (x2_min <= x2 && x2 < x2_2)
		{
			float y1 = Linterp(Matrix_1_1, Length_1_1, x1);
			float y2 = Linterp(Matrix_1_2, Length_1_2, x1);

			y = LinterpOnce(x2_min, y1, x2_2, y2, x2);
		}
		else if (x2_2 <= x2 && x2 < x2_3)
		{
			float y1 = Linterp(Matrix_1_2, Length_1_2, x1);
			float y2 = Linterp(Matrix_1_3, Length_1_3, x1);

			y = LinterpOnce(x2_2, y1, x2_3, y2, x2);
		}
		else if (x2_3 <= x2 && x2 < x2_4)
		{
			float y1 = Linterp(Matrix_1_3, Length_1_3, x1);
			float y2 = Linterp(Matrix_1_4, Length_1_4, x1);

			y = LinterpOnce(x2_3, y1, x2_4, y2, x2);
		}
		else if (x2_4 <= x2 && x2 < x2_5)
		{
			float y1 = Linterp(Matrix_1_4, Length_1_4, x1);
			float y2 = Linterp(Matrix_1_5, Length_1_5, x1);

			y =  LinterpOnce(x2_4, y1, x2_5, y2, x2);
		}
		else if (x2_5 <= x2 && x2 < x2_6)
		{
			float y1 = Linterp(Matrix_1_5, Length_1_5, x1);
			float y2 = Linterp(Matrix_1_6, Length_1_6, x1);

			y = LinterpOnce(x2_5, y1, x2_6, y2, x2);
		}
		else if (x2_6 <= x2 && x2 < x2_7)
		{
			float y1 = Linterp(Matrix_1_6, Length_1_6, x1);
			float y2 = Linterp(Matrix_1_7, Length_1_7, x1);

			y = LinterpOnce(x2_6, y1, x2_7, y2, x2);
		}
		else if (x2_7 <= x2 && x2 < x2_8)
		{
			float y1 = Linterp(Matrix_1_7, Length_1_7, x1);
			float y2 = Linterp(Matrix_1_8, Length_1_8, x1);

			y = LinterpOnce(x2_7, y1, x2_8, y2, x2);
		}
		else if (x2_8 <= x2 && x2 < x2_9)
		{
			float y1 = Linterp(Matrix_1_8, Length_1_8, x1);
			float y2 = Linterp(Matrix_1_9, Length_1_9, x1);

			y = LinterpOnce(x2_8, y1, x2_9, y2, x2);
		}
		else if (x2_9 <= x2 && x2 < x2_max)
		{
			float y1 = Linterp(Matrix_1_9, Length_1_9, x1);
			float y2 = Linterp(Matrix_1_10, Length_1_10, x1);

			y = LinterpOnce(x2_9, y1, x2_max, y2, x2);
		}
		else if (x2 == x2_max)
		{
			y = Linterp(Matrix_1_10, Length_1_10, x1);			
		}
		
		if (y > 0.0f)
			return y / lambda_c;
		else
			return 0.0f;
	}

	ErrorCode* get_CC_F_IsP(float& Result, float M, float lambda_c, float chi_0, InputComplex& x_2, InputComplex& x_1)
	{
		static ErrorCode ErrC;
		// Проверка: некоторые аргументы не должны быть меньше 0		
		if (M < 0.0f)
		{
			ErrC.ArgNumber = 1;
			ErrC.Code = ErrC_NumberMustNotBeNeg;
			return &ErrC;
		}
		if (lambda_c < 0.0f)
		{
			ErrC.ArgNumber = 2;
			ErrC.Code = ErrC_NumberMustNotBeNeg;
			return &ErrC;
		}
		if (chi_0 < 0.0f)
		{
			ErrC.ArgNumber = 3;
			ErrC.Code = ErrC_NumberMustNotBeNeg;
			return &ErrC;
		}

		// Проверка: некоторые аргументы не должны быть больше 90 градусов	
		if (chi_0 > 90.0f / deg)
		{
			ErrC.ArgNumber = 3;
			ErrC.Code = ErrC_AngleMustBeLT90deg;
			return &ErrC;
		}

		// Вызываем функцию интерполяции графика
		Result = CC_F_IsP(M, lambda_c, chi_0, x_2, x_1);
		ErrC.ArgNumber = ErrC_OK;
		ErrC.Code = ErrC_OK;

		return &ErrC;
	}
}